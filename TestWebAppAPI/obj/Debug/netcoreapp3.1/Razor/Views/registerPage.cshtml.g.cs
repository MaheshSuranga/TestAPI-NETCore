#pragma checksum "C:\Users\UnicornMAS\source\repos\TestWebAppAPI\TestWebAppAPI\Views\registerPage.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "07bf2deb409729750ca2ceba6626705cafe39bb7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_registerPage), @"mvc.1.0.view", @"/Views/registerPage.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"07bf2deb409729750ca2ceba6626705cafe39bb7", @"/Views/registerPage.cshtml")]
    public class Views_registerPage : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n<!DOCTYPE html>\r\n\r\n<html lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "07bf2deb409729750ca2ceba6626705cafe39bb72781", async() => {
                WriteLiteral("\r\n    <meta charset=\"utf-8\" />\r\n    <title></title>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "07bf2deb409729750ca2ceba6626705cafe39bb73804", async() => {
                WriteLiteral(@"
    <p>test authentication</p>
    <p><button onclick=""testauth();"">start</button></p>
    <p><label>email:</label><input id=""email"" /></p>
    <p><label>password:</label><input id=""pass"" /></p>
    <p>test create worker</p>
    <p><button onclick=""testcreateworker();"">start</button></p>

    <p><label>name:</label><input id=""name"" /></p>
    <p><label>description:</label><input id=""description"" /></p>
    <p><label>location:</label><input id=""location"" /></p>
    <p><label>position:</label><input id=""position"" /></p>
    <p>test update worker</p>
    <p><button onclick=""testupdateworker();"">start</button></p>
    <p><label>worker code:</label><input id=""workercode"" /></p>
    <p><label>name:</label><input id=""name1"" /></p>
    <p><label>description:</label><input id=""description1"" /></p>
    <p><label>location:</label><input id=""location1"" /></p>
    <p><label>position:</label><input id=""position1"" /></p>
    <p>test update worker statistics</p>
    <p><button onclick=""testupdateworkerst");
                WriteLiteral(@"atistics();"">start</button></p>
    <p><label>worker code:</label><input id=""workercode1"" /></p>
    <p> <input id=""ok1"" type=""checkbox"" /></p>
    <p><label>hourly rate:</label><input id=""hourlyrate"" /></p>
    <p> <input id=""ok2"" type=""checkbox"" /></p>
    <p><label>hours worked:</label><input id=""hoursworked"" /></p>
    <p> <input id=""ok3"" type=""checkbox"" /></p>
    <p><label>overtime rate:</label><input id=""overtimerate"" /></p>
    <p> <input id=""ok4"" type=""checkbox"" /></p>
    <p><label>overtime worked:</label><input id=""overtimeworked"" /></p>
    <p>test get worker  statistics data</p>
    <p><button onclick=""testgetworkerstatistics();"">start</button></p>
    <p id=""workeroutput""> </p>
    <p>test get worker data</p>
    <p><button onclick=""testgetworker();"">start</button></p>
    <p id=""workerstatisticsoutput""> </p>
    <p>test delete worker data</p>
    <p><button onclick=""testdeleteworker();"">start</button></p>
    <script>
        var token = """";
        function testauth() {

");
                WriteLiteral(@"            var requestform = new FormData();
            requestform.set(""email"", document.getElementById(""email"").value);
            requestform.set(""pass"", document.getElementById(""pass"").value);

            var req = new XMLHttpRequest();
            req.open(""POST"", ""http://localhost:54506/api/Auth/BeginAuth?email="" + document.getElementById(""email"").value
                + ""&pass="" + document.getElementById(""pass"").value);

            req.send(requestform);


            req.onreadystatechange = function () {
                console.log(JSON.parse(req.response));
                if (req.readyState == 4) {
                    console.log(JSON.parse(req.response));
                    token = JSON.parse(req.response)[""token""];

                }
            }
        }

        function testcreateworker() {
            var requestform = new FormData();
            requestform.set(""name"", document.getElementById(""name"").value);
            requestform.set(""description"", document.");
                WriteLiteral(@"getElementById(""description"").value);
            requestform.set(""location"", document.getElementById(""location"").value);
            requestform.set(""position"", document.getElementById(""position"").value);


            var req = new XMLHttpRequest();
            req.open(""POST"", ""http://localhost:54506/api/Workers"");
            req.setRequestHeader(""auth"", token);
            req.send(requestform);


            req.onreadystatechange = function () {
                if (req.readyState == 3) {
                    document.getElementById(""workercode"").value = req.responseText;
                    document.getElementById(""workercode1"").value = req.responseText;
                }
            }
        }

        function testupdateworker() {
            var requestform = new FormData();
            requestform.set(""name"", document.getElementById(""name1"").value);
            requestform.set(""description"", document.getElementById(""description1"").value);
            requestform.set(""location");
                WriteLiteral(@""", document.getElementById(""location1"").value);
            requestform.set(""position"", document.getElementById(""position1"").value);


            var req = new XMLHttpRequest();
            req.open(""PUT"", ""http://localhost:54506/api/Workers?code="" + document.getElementById(""workercode"").value);
            req.setRequestHeader(""auth"", token);
            req.send(requestform);


            req.onreadystatechange = function () {
                if (req.readyState == 3) {
                    alert(req.responseText);
                }
            }
        }

        function testupdateworkerstatistics() {
            alert("""");
            var requestform = new FormData();
            alert("""");
            requestform.set(""hrate"", document.getElementById(""hourlyrate"").value);
            requestform.set(""hworked"", document.getElementById(""hoursworked"").value);
            requestform.set(""orate"", document.getElementById(""overtimerate"").value);
            requestform.set(""oworked"", d");
                WriteLiteral(@"ocument.getElementById(""overtimeworked"").value);
            alert("""");
            var req = new XMLHttpRequest();
            req.open(""PUT"", ""http://localhost:54506/api/v1/WorkersStatistics?code="" + document.getElementById(""workercode"").value +
                (document.getElementById(""ok1"").checked ? ""&H_rate=1"" : """") + (document.getElementById(""ok2"").checked ? ""&H_worked=1"" : """") +
                (document.getElementById(""ok3"").checked ? ""&O_rate=1"" : """") + (document.getElementById(""ok4"").checked ? ""&O_worked=1"" : """"));
            req.setRequestHeader(""auth"", token);
            req.send(requestform);


            req.onreadystatechange = function () {
                if (req.readyState == 3) {
                    alert(req.responseText);
                }
            }
        }

        function testgetworkerstatistics() {


            var req = new XMLHttpRequest();
            req.open(""GET"", ""http://localhost:54506/api/v1/WorkersStatistics?code="" + document.getElementById(""w");
                WriteLiteral(@"orkercode"").value);
            req.setRequestHeader(""auth"", token);
            req.send();


            req.onreadystatechange = function () {
                if (req.readyState == 3) {
                    alert(req.responseText);
                }
            }
        }

        function testgetworker() {

            var req = new XMLHttpRequest();
            req.open(""GET"", ""http://localhost:54506/api/Workers?code="" + document.getElementById(""workercode"").value);
            req.setRequestHeader(""auth"", token);
            req.send();


            req.onreadystatechange = function () {
                if (req.readyState == 3) {
                    alert(req.responseText);
                }
            }
        }

        function testdeleteworker() {

            var req = new XMLHttpRequest();
            req.open(""DELETE"", ""http://localhost:54506/api/Workers?code="" + document.getElementById(""workercode"").value);
            req.setRequestHeader(""auth"", token);
     ");
                WriteLiteral("       req.send();\r\n\r\n\r\n            req.onreadystatechange = function () {\r\n                if (req.readyState == 3) {\r\n                    alert(req.responseText);\r\n                }\r\n            }\r\n        }\r\n    </script>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
